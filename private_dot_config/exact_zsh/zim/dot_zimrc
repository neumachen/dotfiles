# vim: ft=zsh
# shellcheck shell=bash

# https://github.com/zimfw/zimfw/issues/528#issuecomment-2600737209
# REF: https://github.com/zimfw/zimfw/issues/528
function zmodule-custom() {
  local zcommand zname ztarget
  local -a zargs
  zcommand=${1}
  zname=custom/${zcommand}
  shift
  while (( # > 0 )); do
    case ${1} in
      --name)
        shift
        zname=${1}
        ;;
      --if)
        shift
        zargs+=(--if "(( \${+commands[${zcommand}]} )) && ${1}")
        ;;
      --if-command)
        shift
        zargs+=(--if "(( \${+commands[${zcommand}]} && \${+commands[${1}]} ))")
        ;;
      --if-ostype)
        shift
        zargs+=(--if "(( \${+commands[${zcommand}]} )) && [[ \${OSTYPE} == ${1} ]]")
        ;;
      --on-pull)
        shift
        zargs+=(--on-pull ${1})
        ;;
      -d|--disabled)
        zargs+=(--disabled)
        ;;
      -f|--fpath)
        shift
        zargs+=(--fpath ${1})
        ;;
      -a|--autoload)
        shift
        zargs+=(--autoload ${1})
        ;;
      -s|--source)
        shift
        zargs+=(--source ${1})
        ;;
      -c|--cmd)
        shift
        zargs+=(--cmd ${1})
        ;;
      --comp)
        shift
        ztarget=functions/_${1//[^[:IDENT:]]/-}
        zargs+=(--on-pull "mkdir functions")
        zargs+=(--fpath functions)
        zargs+=(--cmd "if [[ ! {}/${ztarget} -nt \${commands[${zcommand}]} ]]; then ${1} >! {}/${ztarget}; fi")
        zargs+=(--cmd "if (( \${+_comps} && ! \${+_comps[${zcommand}]} )); then autoload -Uz ${ztarget:t}; _comps[${zcommand}]=${ztarget:t}; fi")
        ;;
      --eval)
        shift
        ztarget=${1//[^[:IDENT:]]/-}.zsh
        zargs+=(--cmd "if [[ ! {}/${ztarget} -nt \${commands[${zcommand}]} ]]; then ${1} >! {}/${ztarget}; zcompile -UR {}/${ztarget}; fi")
        zargs+=(--source ${ztarget})
        ;;
      *)
        print "Unknown zmodule option ${1}"
        return 2
        ;;
    esac
    shift
  done

  zmodule custom-${zcommand} --name ${zname} --use mkdir --if-command ${zcommand} ${zargs}
}

# Zim modules
zmodule homebrew
zmodule custom
zmodule environment
zmodule git
zmodule input
zmodule termtitle
zmodule utility
zmodule fzf
zmodule exa

# Community Modules
zmodule joke/zim-chezmoi
zmodule joke/zim-github-cli
zmodule joke/zim-helm
zmodule joke/zim-istioctl
zmodule joke/zim-k9s
zmodule joke/zim-kubectl
zmodule joke/zim-minikube
zmodule joke/zim-skaffold
zmodule jeffreytse/zsh-vi-mode

# Prompt
zmodule joke/zim-starship

# Oh-My-Zsh libraries and plugins
zmodule ohmyzsh/ohmyzsh --root lib --source clipboard.zsh

# Completions
zmodule zsh-users/zsh-completions --fpath src

# Custom completions
zmodule asdf-vm/asdf --fpath internal/completions/asdf.zsh
zmodule docker/cli --root contrib/completion/zsh --fpath _docker
zmodule eza-community/eza --root completions/zsh --fpath _eza
zmodule sharkdp/fd --root contrib/completion --fpath _fd
zmodule x-motemen/ghq --root misc/zsh --fpath _ghq
zmodule ahmetb/kubectx --fpath completion/_kubectx.zsh --fpath completion/_kubens.zsh
zmodule srijanshetty/zsh-pandoc-completion
zmodule rust-lang/cargo --root src/etc --fpath _cargo
zmodule ohmyzsh/ohmyzsh --root plugins/rust --fpath _rustc
zmodule-custom broot --source "${HOME}/.config/broot/launcher/bash/br"
zmodule-custom zoxide --eval "zoxide init --cmd cd zsh"
zmodule-custom starship --eval "starship init zsh"

# Syntax highlighting and suggestions (load these last)
zmodule zdharma-continuum/fast-syntax-highlighting
zmodule zsh-users/zsh-autosuggestions
zmodule zsh-users/zsh-history-substring-search
zmodule Aloxaf/fzf-tab
zmodule wfxr/forgit

# Load last
zmodule completion
