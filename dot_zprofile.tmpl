# -*- mode: sh; sh-set-shell: zsh -*-
# vim: ft=zsh

source "${HOME}/.shtils"

{{ if eq .chezmoi.os "darwin" -}}
if [ -f "${HOME}/.gnubin_path" ]; then
  source "${HOME}/.gnubin_path"
fi
if [ -z "${BREW_PREFIX}" ]; then
  export BREW_PREFIX=$([[ "$(arch)" == "arm64" ]] && echo "/opt/homebrew" || echo "/usr/local")
  pathmunge "${BREW_PREFIX}/bin" after
  pathmunge "${BREW_PREFIX}/sbin" after
fi
{{ end -}}

# ZSH only and most performant way to check existence of an executable
command_exists() { (( $+commands[$1] )); }

if [ -z "${CHEZMOI_CONFIG_DIR}" ]; then
  if command_exists chezmoi; then
    export CHEZMOI_CONFIG_DIR="${HOME}/.config/chezmoi"
    if [ -z "${DOTFILES_DIR}" ]; then
      export DOTFILES_DIR="$(chezmoi source-path)"
    fi
  fi
fi

# this should only be used when gpg was installed using brew
# https://stackoverflow.com/questions/39494631/gpg-failed-to-sign-the-data-fatal-failed-to-write-commit-object-git-2-10-0
export GPG_TTY=$(command tty)
 
local_bin="${HOME}/.local/bin"
if [[ ! -d "${local_bin}" ]]; then
  echo-info "local bin directory not found, creating"
  mkdir -p "${local_bin}"
fi
export LOCAL_BIN="${local_bin}"

local_sbin="${HOME}/.local/sbin"
if [ ! -d "${local_sbin}" ]; then
  echo-info "local sbin directory not found, creating"
  mkdir -p "${local_sbin}"
fi
export LOCAL_SBIN="${local_sbin}"

fzf_bin="${HOME}/.local/share/fzf/bin"
if [[ ! -d "${fzf_bin}" ]]; then
  echo-warn "${fzf_bin} not found"
else
  export LOCAL_BIN="${LOCAL_BIN}:${fzf_bin}"
fi
pathmunge "${LOCAL_BIN}" after
pathmunge "${LOCAL_SBIN}" after

taskwarrior_config="${XDG_CONFIG_HOME}/taskwarrior"
if [[ ! -d "$taskwarrior_config" ]] && command_exists task; then
  export TASKWARRIOR_CONFIG="${XDG_CONFIG_HOME}/taskwarrior"
fi

{{- if (hasKey . "envvars") }}
 {{ range .envvars }}
export {{ . }}
 {{- end -}}
{{ end }}
