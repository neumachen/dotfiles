# -*- mode: sh; sh-set-shell: zsh -*-
# vim: ft=zsh

source "${HOME}/.shtils"

# ZSH only and most performant way to check existence of an executable
# https://www.topbug.net/blog/2016/10/11/speed-test-check-the-existence-of-a-command-in-bash-and-zsh/
command_exists() { (( $+commands[$1] )); }

manual_pathmunge "/usr/local/man" before

export XDG_CONFIG_HOME=${XDG_CONFIG_HOME:-$HOME/.config}
export ZDOTDIR=${ZDOTDIR:-$XDG_CONFIG_HOME/zsh}
export ZIM_HOME=${ZDOTDIR}/zim
export ZIM_CONFIG_FILE=${ZIM_HOME}/.zimrc

# You can use .zprofile to set environment vars for non-login, non-interactive shells.
if [[ ( "$SHLVL" -eq 1 && ! -o LOGIN ) && -s "${ZDOTDIR:-$HOME}/.zprofile" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprofile"
fi

# Lang stuff
export LANG=en_US.UTF-8
export LANGUAGE=en_US
export LC_ALL=en_US.UTF-8
export LC_MONETARY=en_FI.UTF-8
export LC_TIME=en_FI.UTF-8

export CLICOLOR=1
export VISUAL="nvim --cmd 'let g:flatten_wait=1'"
export EDITOR="nvim"
export PAGER=less
export MANPAGER='less -is'
export LESSOPEN="|/usr/local/bin/lesspipe.sh %s"

if command_exists nvim; then
  export MANPAGER='nvim +Man!'
fi

export DEV_WORKSPACE_ROOT="${HOME}/dev-workspace"
export VCS_REPOSITORIES_DIR="${DEV_WORKSPACE_ROOT}/repos"
export REPOS_GITHUB="${VCS_REPOSITORIES_DIR}/repos/github"
export REPOS_GITHUB_PERSONAL="${REPOS_GITHUB}/neumachen"
export TASKWARRIOR_CONFIG="${XDG_CONFIG_HOME}/taskwarrior"
export DENKWERKSTATT_DIR="${HOME}/denkwerkstatt"
export WISSENSSPEICHER_DIR="${DENKWERKSTATT_DIR}/wissensspeicher"

local_bin="${HOME}/.local/bin"
if [[ ! -d "${local_bin}" ]]; then
  echo-info "local bin directory not found, creating"
  mkdir -p "${local_bin}"
fi
export LOCAL_BIN="${local_bin}"

local_sbin="${HOME}/.local/sbin"
if [ ! -d "${local_sbin}" ]; then
  echo-info "local sbin directory not found, creating"
  mkdir -p "${local_sbin}"
fi
export LOCAL_SBIN="${local_sbin}"

{{ if eq .chezmoi.os "darwin" -}}
if [ -f "${HOME}/.gnubin_path" ]; then
  source "${HOME}/.gnubin_path"
fi

if [ -S "${HOME}/Library/Group Containers/2BUA8C4S2C.com.1password/t/agent.sock" ]; then
  export SSH_AUTH_SOCK="${HOME}/Library/Group Containers/2BUA8C4S2C.com.1password/t/agent.sock"
fi
{{ end -}}
